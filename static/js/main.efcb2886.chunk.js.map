{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKey","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAOaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAcEC,UAAY,SAACC,GACX,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAftC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,aAN5C,gCAUE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,aAX/C,oBAkBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACkB,KAAfT,EACG,0BADH,qCAEiCA,EAFjC,eAxBX,GAAyBU,a,MCFzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.efcb2886.chunk.js","sourcesContent":["/* eslint-disable react/sort-comp */\nimport { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKey);\n  }\n\n  // eslint-disable-next-line react/no-deprecated\n  componentWillMount() {\n    document.removeEventListener('keyup', this.handleKey);\n  }\n\n  handleKey = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey === ''\n            ? 'Nothing was pressed yet'\n            : `The last pressed key is [  ${pressedKey}  ]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}